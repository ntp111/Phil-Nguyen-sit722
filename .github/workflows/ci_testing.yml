name: CI - Test, Build & Push (testing)

on:
  workflow_dispatch:
  push:
    branches: [ testing ]

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  TAG: testing-${{ github.sha }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ---- Backend unit tests ----
      - name: Install test deps (customer_service)
        working-directory: backend/customer_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests (customer_service)
        working-directory: backend/customer_service
        run: pytest -q

      - name: Install test deps (product_service)
        working-directory: backend/product_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests (product_service)
        working-directory: backend/product_service
        run: pytest -q

      - name: Install test deps (order_service)
        working-directory: backend/order_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests (order_service)
        working-directory: backend/order_service
        run: pytest -q

      # ---- Push images to ACR only after tests pass ----
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Derive ACR name & login
        shell: bash
        run: |
          ACR_NAME="${{ env.ACR_LOGIN_SERVER }}"
          # If a login server was provided, strip the suffix to get the registry name
          ACR_NAME="${ACR_NAME%%.azurecr.io}"
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          az acr login --name "$ACR_NAME"

      - name: Build & Push customer_service
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/customer_service:${{ env.TAG }} -f backend/customer_service/Dockerfile backend/customer_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/customer_service:${{ env.TAG }}

      - name: Build & Push product_service
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.TAG }} -f backend/product_service/Dockerfile backend/product_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.TAG }}

      - name: Build & Push order_service
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.TAG }} -f backend/order_service/Dockerfile backend/order_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.TAG }}

      - name: Build & Push frontend
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.TAG }} -f frontend/Dockerfile frontend
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.TAG }}

      - name: Azure Logout
        if: always()
        run: az logout
